

InputPattern.html 

No.  [  5  ] 

[submit] 


server - PatternServlet -> output -> browser 

		1 
		12
		123
		1234
		12345
		
-------------------------------------------------------

add validation in above program 

1) if no is blank then take 5 as number 
2) if user input string then you have to print msg > please enter valid number 
3) if user input special symbols > default 5 symbol print 

InputPattern.html 

No.  [  *  ] 

[submit] 


*
**
***
****
*****

-------------------------------------------------------
 
 

	First Name
	
	LAstName

	Email

	Password

	Gender : radio 

	City    : select 

	Hobby :	 X  Y  Z A B  -> checkbox 

		
		[ Submit ] 


	FirstName : X 
	LAstNAme :  X 

-------------------------------------------------------------------------

	request.getParameter("XXX") => String -> single value 
	request.getParameterValues("xxx") => String[] -> multi value {checkbox,select}

-----------------------------------------------------------------------------	
	 
	 HTML -> static 
		
	JSP-> 	Dynamic 
				java server pages 
				java servlet pages 
					
				we can create html 
				we can also add java stuff 
				
				scriptlet <% %> -> any java stuff  
				expression <%=  %> -> print 
				declaration <%!  %> -> declaration 
				
				
				
		test 
		t20 

		
		XXX@XXXX.XX 
		regex 		
		
--------------------------------------------------------------------

	1) password -> min 8 , 1) lower 2) upper 3) digit 4) special 
	2) password -> strength 
					[ 1 - 5 ] => 2 
					[ repeat ] => 5 
					
					Tejas@123 => 2 
					Tejas@Shah@123 => 4
					Tejas@Shah@12_3=> 5 
					 
------------------------------------------------------------------------


Product -> add 


NewProduct.jsp 
					 
	Name : 
	Price : 
	Qty : 
	Category : 
	ProductId : random 
							
				
				Submit 
				
SaveProductServlet 

	read / getParameter 
	validation 
	
	Success 
	
	Back -> error 
	
	
----------------------------------------------------------

webapp -> 
	
	webpage 
	
	www.abc.com 
	
		script/virus => execute -> computer 
		
	website->execute-> 
	java --- applet {run}	
	
	
	CGI -> website 		
	1	user ---> request --> 1 object --> allocate ---> xyz --> server --> response --> deallocate  

	500 user --> request --> 500 object 

	4 GB RAM  X 2 
	500 GB 
	 


	jsp-servlet 
	
	servlet 
	
	
	
	1-- > request ----> server --> object : thread --> process --> response --> 
	2-->  request ---> server ---> thread : process ---> response --->
	
	
	500 request -> 500 thread -> light weighted process 
										allocate 
										db : sync 
	
	obj 50 mb -> 500 +200 {heap}{gc}{jvm}{ram}
	

	
	lifecycle 
	
	1) Load class : 1 
	2) create instance : 1  
	3) init() : 1  { db api google } 
	4) service() : N 
	5) destroy() : 1 
	 
--------------------------------------------------------------------------------

ProductBean
	productId --> random 
	name 
	price 
	qty
	category 
	
	getter
	setter 
	
	main 
			3 product instance 
			
			ProductBean p1 = new ProductBean(); 
 
			p1.getData();//you can take input using any approach 
			ArrayList 
			ArrayList<ProductBean> products = new ArrayList<>();
			products.add(p1); 
			
			print from that array list 
			
------------------------------------------------------------------------------------			
	2 -> addition 
			
	20 -> addition -> 20 variable ? array 
					
	50-> 20 =>30
	20-> 50 => 
	
	int a[] = new int[20]; 
	
	 				
	collection -> 			
				
	List				Set     			Queue				Map 
	 duplicate			no duplicate		duplicate			key,value 
	 																value can be duplicate	
	 unsorted 			sort 				PQ ->Sort 				
						HashSet -> unSorted 					TreeMap -> sorted 
						TreeSet -> Sorted 						HashMap -> unsorted 
	Flipkart 
	
		LEd TV 
		500 -> db -> mobile -> web ->   
    
    	mouse 
    	200 -> db -> mobile | web 
    	
		
		
--------------------------------------------------------------------------------
		
				
	JDBC --> api --> lib  -> .class -> zip -> .jar 
	
	
	java api -> Scanner Math String system File Path 
	
	
	jdbc api ->Connection , Statement , PreparedStatuement , ResultSet , CallableStatment -> database 
				Connection , ST / PT , RS 
				
	Gmap Api -> X X X X X -> map
	
	nse api -> X X X  X X -> share market data -> equity , F&O , mf   
							
		
------------------------------------------------------------

	java -> database -> computer -> username -> password -> 
 			mysql / test -> localhost -> root , root -> 
 				
 
 	mysql-connector -> lib -> mysql -> .class => java -> db 


	java --> mysql db connection 
	






















	























